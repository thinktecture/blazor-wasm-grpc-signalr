@page "/conferences"

@implements IDisposable

@attribute [Authorize]

@using DTO = BlazorConfTool.Shared.DTO
@using BlazorConfTool.Client.Services

@inject NavigationManager _navigation
@inject ConferencesService _conferencesService
@inject IToastService _toastService

<h1>Conferences</h1>

<button @onclick="AddConference">Add Conference</button>
<br />
<br />

@if (_conferences == null)
{
    <p><em>Loading conferences...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var conf in _conferences)
            {
                <tr @onclick="() => LoadDetails(conf.ID)">
                    <td>@conf.Title</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private IEnumerable<DTO.ConferenceOverview> _conferences;

    protected override async Task OnInitializedAsync()
    {
        _conferencesService.ConferenceListChanged += HandleConferenceUpdates;

        await _conferencesService.Init();

        _conferences = await ListConferences();
    }

    private async void HandleConferenceUpdates(object sender, EventArgs args)
    {
        _toastService.ShowInfo("Conference list changed.");

        Console.WriteLine("###SignalR - NEW conference added!");
        _conferences = await ListConferences();

        StateHasChanged();
    }

    private async Task<List<DTO.ConferenceOverview>> ListConferences()
    {
        return await _conferencesService.ListConferences();
    }

    private void LoadDetails(Guid id)
    {
        _navigation.NavigateTo("conferences/show/" + id);
    }

    private void AddConference(MouseEventArgs e)
    {
        _navigation.NavigateTo("conferences/new");
    }

    public void Dispose()
    {
        GC.SuppressFinalize(this);

        if (_conferencesService.ConferenceListChanged != null)
        {
            _conferencesService.ConferenceListChanged -= HandleConferenceUpdates;
        }
    }
}
